#!/usr/bin/env bash

cd video; for f in $(ls *.mp4);do echo $f; ffmpeg -i $f -filter:v "setpts=PTS/10,fps=fps=2" ../vid1/$f; done
exit

#ffmpeg -i 05042017_003724A.mp4 -ss 00:00 -to 00:10 -acodec copy -vcodec copy 1.mp4

ffmpeg -i 05042017_003724A.mp4 -filter:v "setpts=PTS/10,fps=fps=1" 1.mp4
#ffmpeg -i 1.mp4 -ss 00:00 -to 00:10 -acodec copy -vcodec copy 2.mp4
exit

### less FPS
#ffmpeg -i 1.mp4 -filter:v "fps=fps=5" 2.mp4
### or speed up
ffmpeg -i 1.mp4 -filter:v "setpts=PTS/10, fps=fps=10" 2.mp4
exit


### deshake
#ffmpeg -i 2.mp4 -filter:v "deshake=rx=64:ry=64:blocksize=128" 3.mp4

### vidstab, pass 1
ffmpeg -i 1.mp4 -vf vidstabdetect=stepsize=6:shakiness=10:accuracy=10:result=3.trf -f null -
### vidstab, pass 2
ffmpeg -i 1.mp4 -vf vidstabtransform=input="3.trf":zoom=1:smoothing=30,unsharp=5:5:0.8:3:3:0.4 -vcodec libx264 -preset slow -tune film -crf 18 -acodec copy "3.mp4"


##            ffmpeg -i 1.mp4 -filter:v "setpts=PTS/10, fps=24" 2.mp4

#rm -f 2.mp4; ffmpeg -i 1.mp4 -filter:v "setpts=PTS/30, fps=10" 2.mp4

##rm -f 21.mp4; ffmpeg -i 1.mp4 -filter:v "setpts=PTS/30, fps=10" 21.mp4
##rm -f 21.mp4; ffmpeg -i 1.mp4 -filter:v "setpts=PTS/40, fps=5" 21.mp4
